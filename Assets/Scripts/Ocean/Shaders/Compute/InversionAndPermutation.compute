#pragma kernel CSMain

RWTexture2D<float4> heightMap;
RWTexture2D<float4> normalMap;

RWTexture2D<float4> pingPongIn;
RWTexture2D<float4> pingPongOut;

int pingPong;
int oceanResolution;
int operationIndex;

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    const int index = fmod((int)id.x + (int)id.y, 2);
    const float sign = index == 0 ? 1.0f : -1.0f;

    float h;
    float h2;
    
    if(pingPong == 0)
    {
        h = pingPongIn[id.xy].r;
        h2 = pingPongIn[id.xy].b;
    }
    else
    {
        h = pingPongOut[id.xy].r;
        h2 = pingPongOut[id.xy].b;
    }

    const float4 heightMapValues = heightMap[id.xy].rgba;

    if(operationIndex == 0)
    {
        heightMap[id.xy] =
            float4(
                sign * h / (float)(oceanResolution * oceanResolution),
                sign * h2 / (float)(oceanResolution * oceanResolution),
                heightMapValues.z,
                heightMapValues.w
            );
    }
    else if(operationIndex == 1)
    {
        heightMap[id.xy] =
            float4(
                heightMapValues.x,
                heightMapValues.y,
                sign * h / (float)(oceanResolution * oceanResolution),
                sign * h2 / (float)(oceanResolution * oceanResolution)
            );
    }
    else
    {
        normalMap[id.xy] =
            float4(
                sign * -h / (float)(oceanResolution * oceanResolution),
                1,
                sign * -h2 / (float)(oceanResolution * oceanResolution),
                0
            );
    }
}
