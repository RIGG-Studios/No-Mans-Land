#pragma kernel CSMain

RWTexture2D<float4> h0;
Texture2D<float4> zeta;

float2 windDirection;
float windSpeed;
float windInfluence;
float amplitude;
int oceanResolution;
float lengthScale;
float smallestLength;

float largestK;

float PhillipsSpectrum(float2 kVec);

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    const float pi = 3.141592653589f;
    const float gravity = 9.81f;
    
    const float2 x = id.xy - (float)oceanResolution/2.0f;
    const float2 kVec = float2(pi * 2.0f * x.x/(int)lengthScale, pi * 2.0f * x.y/(int)lengthScale);

    const float l = (windSpeed * windSpeed) / gravity;
    float kMag = length(kVec);
    if(kMag < 0.00001f)
        kMag = 0.00001f;
    const float kMagSqr = kMag * kMag;
    
    const float2 normK = normalize(kVec);
    
    const float phillips = clamp(sqrt((amplitude / (kMagSqr * kMagSqr))
        * pow(abs(dot(normK, windDirection)), windInfluence)
        * exp(-(1.0f/(kMagSqr * l * l)))
        * exp(-kMagSqr * pow((int)lengthScale/2000.0f, 2.0f))) / sqrt(2.0f), -4000.0f, 4000.0f);
    
    float2 spectrum = zeta[id.xy].xy * (phillips * exp(-(pow(kMagSqr, 2) * pow(smallestLength, 2))));

    //if(kMag < largestK)
    //{
        h0[id.xy] = float4(spectrum.x, spectrum.y, 0.0f, 1.0f);
    //}
}
